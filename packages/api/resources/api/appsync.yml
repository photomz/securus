# THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY. RUN scripts/generateLambdaConfig TO REGENERATE

Resources:
  TagFaceIDDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId: ${self:custom.appsyncId}
      Description: tagFaceID lambda handler for ${self:service}, securus
      LambdaConfig:
        LambdaFunctionArn:
          Fn::GetAtt:
            - TagFaceIDLambdaFunction
            - Arn
      ServiceRoleArn:
        Fn::GetAtt:
          - AppSyncLambdaRole
          - Arn
      Type: AWS_LAMBDA
      Name: tagFaceIDLambda
  TagFaceIDResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId: ${self:custom.appsyncId}
      FieldName: tagFaceID
      RequestMappingTemplate: ${file(resources/api/variableResolver.js):requestMappingTemplate}
      ResponseMappingTemplate: ${file(resources/api/variableResolver.js):responseMappingTemplate}
      TypeName: Query
      DataSourceName:
        Fn::GetAtt:
          - TagFaceIDDataSource
          - Name
  IdentifyCitizenDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId: ${self:custom.appsyncId}
      Description: identifyCitizen lambda handler for ${self:service}, securus
      LambdaConfig:
        LambdaFunctionArn:
          Fn::GetAtt:
            - IdentifyCitizenLambdaFunction
            - Arn
      ServiceRoleArn:
        Fn::GetAtt:
          - AppSyncLambdaRole
          - Arn
      Type: AWS_LAMBDA
      Name: identifyCitizenLambda
  IdentifyCitizenResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId: ${self:custom.appsyncId}
      FieldName: identifyCitizen
      RequestMappingTemplate: ${file(resources/api/variableResolver.js):requestMappingTemplate}
      ResponseMappingTemplate: ${file(resources/api/variableResolver.js):responseMappingTemplate}
      TypeName: Query
      DataSourceName:
        Fn::GetAtt:
          - IdentifyCitizenDataSource
          - Name
  GetIncriminatingImageDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId: ${self:custom.appsyncId}
      Description: getIncriminatingImage lambda handler for ${self:service}, securus
      LambdaConfig:
        LambdaFunctionArn:
          Fn::GetAtt:
            - GetIncriminatingImageLambdaFunction
            - Arn
      ServiceRoleArn:
        Fn::GetAtt:
          - AppSyncLambdaRole
          - Arn
      Type: AWS_LAMBDA
      Name: getIncriminatingImageLambda
  GetIncriminatingImageResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId: ${self:custom.appsyncId}
      FieldName: getIncriminatingImage
      RequestMappingTemplate: ${file(resources/api/variableResolver.js):requestMappingTemplate}
      ResponseMappingTemplate: ${file(resources/api/variableResolver.js):responseMappingTemplate}
      TypeName: Query
      DataSourceName:
        Fn::GetAtt:
          - GetIncriminatingImageDataSource
          - Name
  SubmitAppealDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId: ${self:custom.appsyncId}
      Description: submitAppeal lambda handler for ${self:service}, securus
      LambdaConfig:
        LambdaFunctionArn:
          Fn::GetAtt:
            - SubmitAppealLambdaFunction
            - Arn
      ServiceRoleArn:
        Fn::GetAtt:
          - AppSyncLambdaRole
          - Arn
      Type: AWS_LAMBDA
      Name: submitAppealLambda
  SubmitAppealResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId: ${self:custom.appsyncId}
      FieldName: submitAppeal
      RequestMappingTemplate: ${file(resources/api/variableResolver.js):requestMappingTemplate}
      ResponseMappingTemplate: ${file(resources/api/variableResolver.js):responseMappingTemplate}
      TypeName: Query
      DataSourceName:
        Fn::GetAtt:
          - SubmitAppealDataSource
          - Name
  LoadAppealsDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId: ${self:custom.appsyncId}
      Description: loadAppeals lambda handler for ${self:service}, securus
      LambdaConfig:
        LambdaFunctionArn:
          Fn::GetAtt:
            - LoadAppealsLambdaFunction
            - Arn
      ServiceRoleArn:
        Fn::GetAtt:
          - AppSyncLambdaRole
          - Arn
      Type: AWS_LAMBDA
      Name: loadAppealsLambda
  LoadAppealsResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId: ${self:custom.appsyncId}
      FieldName: loadAppeals
      RequestMappingTemplate: ${file(resources/api/variableResolver.js):requestMappingTemplate}
      ResponseMappingTemplate: ${file(resources/api/variableResolver.js):responseMappingTemplate}
      TypeName: Query
      DataSourceName:
        Fn::GetAtt:
          - LoadAppealsDataSource
          - Name
  CrowdsourceLabelImageDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId: ${self:custom.appsyncId}
      Description: crowdsourceLabelImage lambda handler for ${self:service}, securus
      LambdaConfig:
        LambdaFunctionArn:
          Fn::GetAtt:
            - CrowdsourceLabelImageLambdaFunction
            - Arn
      ServiceRoleArn:
        Fn::GetAtt:
          - AppSyncLambdaRole
          - Arn
      Type: AWS_LAMBDA
      Name: crowdsourceLabelImageLambda
  CrowdsourceLabelImageResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId: ${self:custom.appsyncId}
      FieldName: crowdsourceLabelImage
      RequestMappingTemplate: ${file(resources/api/variableResolver.js):requestMappingTemplate}
      ResponseMappingTemplate: ${file(resources/api/variableResolver.js):responseMappingTemplate}
      TypeName: Query
      DataSourceName:
        Fn::GetAtt:
          - CrowdsourceLabelImageDataSource
          - Name
  ListFriendsDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId: ${self:custom.appsyncId}
      Description: listFriends lambda handler for ${self:service}, securus
      LambdaConfig:
        LambdaFunctionArn:
          Fn::GetAtt:
            - ListFriendsLambdaFunction
            - Arn
      ServiceRoleArn:
        Fn::GetAtt:
          - AppSyncLambdaRole
          - Arn
      Type: AWS_LAMBDA
      Name: listFriendsLambda
  ListFriendsResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId: ${self:custom.appsyncId}
      FieldName: listFriends
      RequestMappingTemplate: ${file(resources/api/variableResolver.js):requestMappingTemplate}
      ResponseMappingTemplate: ${file(resources/api/variableResolver.js):responseMappingTemplate}
      TypeName: Query
      DataSourceName:
        Fn::GetAtt:
          - ListFriendsDataSource
          - Name
  PingDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId: ${self:custom.appsyncId}
      Description: ping lambda handler for ${self:service}, securus
      LambdaConfig:
        LambdaFunctionArn:
          Fn::GetAtt:
            - PingLambdaFunction
            - Arn
      ServiceRoleArn:
        Fn::GetAtt:
          - AppSyncLambdaRole
          - Arn
      Type: AWS_LAMBDA
      Name: pingLambda
  PingResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId: ${self:custom.appsyncId}
      FieldName: ping
      RequestMappingTemplate: ${file(resources/api/variableResolver.js):requestMappingTemplate}
      ResponseMappingTemplate: ${file(resources/api/variableResolver.js):responseMappingTemplate}
      TypeName: Query
      DataSourceName:
        Fn::GetAtt:
          - PingDataSource
          - Name
